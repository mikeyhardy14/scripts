Option Explicit

Sub GetMultipleSharePointFileAndFolderSizes()
    Dim sharepointPaths(1 To 4) As String
    Dim fso As Object
    Dim wsFile As Worksheet, wsFolder As Worksheet
    Dim folderRow As Long, fileRow As Long
    Dim i As Long
    
    ' ======== UPDATE YOUR SHAREPOINT PATHS HERE ========
    sharepointPaths(1) = "\\sharepoint.site.url@ssl\DavWWWRoot\sites\yourteamsite\documents\FolderA"
    sharepointPaths(2) = "\\sharepoint.site.url@ssl\DavWWWRoot\sites\yourteamsite\documents\FolderB"
    sharepointPaths(3) = "\\sharepoint.site.url@ssl\DavWWWRoot\sites\yourteamsite\documents\FolderC"
    sharepointPaths(4) = "\\sharepoint.site.url@ssl\DavWWWRoot\sites\yourteamsite\documents\FolderD"
    ' ==================================================
    
    ' Create FileSystemObject
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    ' Delete "File Sizes" and "Folder Sizes" sheets if they already exist
    On Error Resume Next
    Set wsFile = ThisWorkbook.Worksheets("File Sizes")
    If Not wsFile Is Nothing Then
        Application.DisplayAlerts = False
        wsFile.Delete
        Application.DisplayAlerts = True
    End If
    
    Set wsFolder = ThisWorkbook.Worksheets("Folder Sizes")
    If Not wsFolder Is Nothing Then
        Application.DisplayAlerts = False
        wsFolder.Delete
        Application.DisplayAlerts = True
    End If
    On Error GoTo 0
    
    ' Create brand new sheets
    Set wsFile = ThisWorkbook.Worksheets.Add
    wsFile.Name = "File Sizes"
    Set wsFolder = ThisWorkbook.Worksheets.Add
    wsFolder.Name = "Folder Sizes"
    
    ' Setup headers
    wsFile.Range("A1:C1").Value = Array("File Name", "File Path", "File Size (Bytes)")
    wsFolder.Range("A1:C1").Value = Array("Folder Name", "Folder Path", "Total Size (Bytes)")
    
    ' Initialize data start rows
    fileRow = 2
    folderRow = 2
    
    ' Loop through each of the four SharePoint paths
    For i = 1 To 4
        Dim currentFolder As Object
        
        On Error Resume Next
        Set currentFolder = fso.GetFolder(sharepointPaths(i))
        On Error GoTo 0
        
        If currentFolder Is Nothing Then
            MsgBox "Unable to access: " & sharepointPaths(i), vbExclamation
        Else
            ' Process folder (recursively adds data to both sheets)
            ProcessFolder currentFolder, wsFile, wsFolder, fileRow, folderRow
        End If
    Next i
    
    MsgBox "File and folder sizes have been retrieved successfully!", vbInformation
End Sub

' ==================================================
' ProcessFolder:
'   - Processes the top-level folder (files + subfolders).
'   - Recursively accumulates sizes via ProcessFolderReturnSize.
' ==================================================
Private Sub ProcessFolder(ByVal fldr As Object, _
                          ByRef wsFile As Worksheet, _
                          ByRef wsFolder As Worksheet, _
                          ByRef fileRow As Long, _
                          ByRef folderRow As Long)
    
    Dim subFolder As Object
    Dim fil As Object
    Dim folderSize As Long
    Dim tmpSize As Long
    
    folderSize = 0
    
    ' 1) Loop through files in the current folder
    For Each fil In fldr.Files
        On Error Resume Next
        wsFile.Cells(fileRow, 1).Value = fil.Name
        wsFile.Cells(fileRow, 2).Value = fil.Path
        wsFile.Cells(fileRow, 3).Value = fil.Size
        
        If Err.Number <> 0 Then
            ' Could not access the file
            wsFile.Cells(fileRow, 1).Value = "Error retrieving file"
            wsFile.Cells(fileRow, 2).Value = fil.Path
            wsFile.Cells(fileRow, 3).Value = 0
            Err.Clear
        Else
            folderSize = folderSize + fil.Size
        End If
        On Error GoTo 0
        
        fileRow = fileRow + 1
    Next fil
    
    ' 2) Loop through all subfolders, recursively calculating their sizes
    For Each subFolder In fldr.SubFolders
        On Error Resume Next
        tmpSize = ProcessFolderReturnSize(subFolder, wsFile, wsFolder, fileRow, folderRow)
        
        If Err.Number <> 0 Then
            ' Log the subfolder path that caused an error
            wsFolder.Cells(folderRow, 1).Value = "Error retrieving subfolder"
            
            On Error Resume Next
            wsFolder.Cells(folderRow, 2).Value = subFolder.Path
            On Error GoTo 0
            
            wsFolder.Cells(folderRow, 3).Value = 0
            folderRow = folderRow + 1
            Err.Clear
        Else
            folderSize = folderSize + tmpSize
        End If
        
        On Error GoTo 0
    Next subFolder
    
    ' 3) Write current folder’s size — only if > 0
    If folderSize > 0 Then
        wsFolder.Cells(folderRow, 1).Value = fldr.Name
        wsFolder.Cells(folderRow, 2).Value = fldr.Path
        wsFolder.Cells(folderRow, 3).Value = folderSize
        folderRow = folderRow + 1
    End If
End Sub

' ==================================================
' ProcessFolderReturnSize:
'   - Recursively calculates the total size of a folder,
'     including all files in subfolders.
'   - Returns the size to the caller so it can be included
'     in the parent folder’s total.
' ==================================================
Private Function ProcessFolderReturnSize(ByVal fldr As Object, _
                                         ByRef wsFile As Worksheet, _
                                         ByRef wsFolder As Worksheet, _
                                         ByRef fileRow As Long, _
                                         ByRef folderRow As Long) As Long
    
    Dim subFolder As Object
    Dim fil As Object
    Dim folderSize As Long
    Dim tmpSize As Long
    
    folderSize = 0
    
    ' 1) Files in this folder
    For Each fil In fldr.Files
        On Error Resume Next
        wsFile.Cells(fileRow, 1).Value = fil.Name
        wsFile.Cells(fileRow, 2).Value = fil.Path
        wsFile.Cells(fileRow, 3).Value = fil.Size
        
        If Err.Number <> 0 Then
            wsFile.Cells(fileRow, 1).Value = "Error retrieving file"
            wsFile.Cells(fileRow, 2).Value = fil.Path
            wsFile.Cells(fileRow, 3).Value = 0
            Err.Clear
        Else
            folderSize = folderSize + fil.Size
        End If
        
        On Error GoTo 0
        
        fileRow = fileRow + 1
    Next fil
    
    ' 2) Subfolders
    For Each subFolder In fldr.SubFolders
        On Error Resume Next
        tmpSize = ProcessFolderReturnSize(subFolder, wsFile, wsFolder, fileRow, folderRow)
        
        If Err.Number <> 0 Then
            wsFolder.Cells(folderRow, 1).Value = "Error retrieving subfolder"
            
            On Error Resume Next
            wsFolder.Cells(folderRow, 2).Value = subFolder.Path
            On Error GoTo 0
            
            wsFolder.Cells(folderRow, 3).Value = 0
            folderRow = folderRow + 1
            Err.Clear
        Else
            folderSize = folderSize + tmpSize
        End If
        
        On Error GoTo 0
    Next subFolder
    
    ' 3) Write this folder’s size — only if > 0
    If folderSize > 0 Then
        wsFolder.Cells(folderRow, 1).Value = fldr.Name
        wsFolder.Cells(folderRow, 2).Value = fldr.Path
        wsFolder.Cells(folderRow, 3).Value = folderSize
        folderRow = folderRow + 1
    End If
    
    ' Return total folder size to parent
    ProcessFolderReturnSize = folderSize
End Function
